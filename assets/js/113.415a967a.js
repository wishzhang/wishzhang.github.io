(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{526:function(t,v,_){"use strict";_.r(v);var s=_(2),a=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"适合求解的问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#适合求解的问题"}},[t._v("#")]),t._v(" 适合求解的问题")]),t._v(" "),v("p",[t._v("动态规划通常用来求解"),v("code",[t._v("最优化问题")]),t._v("，适合求解的问题需要满足两个特点：")]),t._v(" "),v("ul",[v("li",[t._v("最优子结构")]),t._v(" "),v("li",[t._v("重叠子问题。")])]),t._v(" "),v("p",[t._v("最优子结构是确定动态规划算法的正确性，通常用数学归纳法来证明问题是否具有最优子结构特点；重叠子问题是确定动态规划算法的计算效率。")]),t._v(" "),v("h2",{attrs:{id:"设计步骤"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设计步骤"}},[t._v("#")]),t._v(" 设计步骤")]),t._v(" "),v("ol",[v("li",[t._v("刻画一个最优解的结构特征")]),t._v(" "),v("li",[t._v("递归地定义最优解的值")]),t._v(" "),v("li",[t._v("计算最优解的值，通常采用自底向上的方法")]),t._v(" "),v("li",[t._v("利用计算出的信息构造一个最优解")])])])}),[],!1,null,null,null);v.default=a.exports}}]);