(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{477:function(e,v,_){"use strict";_.r(v);var t=_(2),i=Object(t.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("在 Vue 的文档可以看到 ref 的作用是两个：")]),e._v(" "),v("ul",[v("li",[e._v("当 ref 作用在普通 DOM 元素时，可以获取到对应 DOM 元素对象")]),e._v(" "),v("li",[e._v("但 ref 作用在组件的时候，可以获取到对应组件的 Vue 实例")])]),e._v(" "),v("p",[e._v("而元素的 id 属性是通过"),v("code",[e._v("document.getElementById()")]),e._v("来获取 DOM 元素对象。")]),e._v(" "),v("p",[e._v("那么使用 ref 和 id 的方式在获取 DOM 元素的情况下，有什么区别呢？")]),e._v(" "),v("p",[e._v("有人说 ref 是为了方便获取 DOM，没说清楚。因为有时候也使用 id 获取 DOM 元素，没有说 ref 或 id 有什么区别。来考虑一种场景：当在一个组件内在元素上使用了 id，而一个页面同时使用了两个这组件，那么就会导致第二个组件通过"),v("code",[e._v("document.getElementById()")]),e._v("获取的 DOM 是第一个组件的 DOM，第二个组件的 DOM 效果失效。")]),e._v(" "),v("p",[e._v("这个问题解决方法有两个：")]),e._v(" "),v("ul",[v("li",[e._v("给组件内的 id 设置不同的值，比如以时间戳的方式设置 id 值")]),e._v(" "),v("li",[e._v("当在 vue 组件时，可以通过 ref 解决")])]),e._v(" "),v("p",[e._v("使用 Vue 组件在普通元素上添加 ref 属性，渲染后 ref 属性不会在该普通元素而且也不会渲染成 id 属性。")]),e._v(" "),v("p",[e._v("所以考虑一整个页面下组件的这个 id 是否唯一，如果不是就用 ref，如果是那么才考虑使用 id。")])])}),[],!1,null,null,null);v.default=i.exports}}]);