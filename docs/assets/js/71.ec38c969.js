(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{479:function(s,a,t){"use strict";t.r(a);var e=t(2),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"良好的系统目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#良好的系统目标"}},[s._v("#")]),s._v(" 良好的系统目标")]),s._v(" "),a("p",[s._v("系统的设计目标：正确性、可靠性、安全性、可维护性。\n模块化对于系统的这四个目标都有很大的帮助，是个极为有用的工具。")]),s._v(" "),a("h2",{attrs:{id:"良好的软件设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#良好的软件设计"}},[s._v("#")]),s._v(" 良好的软件设计")]),s._v(" "),a("p",[s._v("在软件设计中，模块化的直接结果有"),a("code",[s._v("高内聚、低耦合")]),s._v("的特点，但这仅仅是最基础的特性之一。在理想情况下，软件设计应该还要符合良好产品的特性"),a("code",[s._v("易理解性、一致性、易用性、美观性")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"编程范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程范式"}},[s._v("#")]),s._v(" 编程范式")]),s._v(" "),a("p",[s._v("设计的起点是产品化思想。\n而程序设计的实现工具是编程语言。不同的编程语言的设计理念，抽象角度不同，它的抽象角度决定了它所支持的程序基本结构（如过程、模块、类）。他们的基本结构的区别在于声明和操作的范围及复杂程度。")]),s._v(" "),a("p",[s._v("有面向对象编程、有面向过程编程、有函数式编程。其实他们都实现的模块化，对象，算法，行为都是一个模块，这该拿什么作为模块标志呢？\n最好是从问题域到解域的直接连接点，从良好的系统目标和良好的软件设计等方面去考虑。\n比如最佳实践有：")]),s._v(" "),a("ul",[a("li",[s._v("一个文件即一个模块")]),s._v(" "),a("li",[s._v("模块有依赖的其他模块、私有行为、公开接口")]),s._v(" "),a("li",[s._v("模块与模块之间有良好的通信模式")]),s._v(" "),a("li",[s._v("抽取模块不断去解决需求")])]),s._v(" "),a("h2",{attrs:{id:"js模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js模块"}},[s._v("#")]),s._v(" JS模块")]),s._v(" "),a("h3",{attrs:{id:"a-浏览器传统加载方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-浏览器传统加载方法"}},[s._v("#")]),s._v(" a. 浏览器传统加载方法")]),s._v(" "),a("ul",[a("li",[s._v("页面内嵌的脚本")]),s._v(" "),a("li",[s._v("外部脚本")])]),s._v(" "),a("p",[a("code",[s._v("defer")]),s._v("是渲染完再执行，"),a("code",[s._v("async")]),s._v("是下载完就执行。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script src="path/to/myModule.js" defer><\/script>\n<script src="path/to/myModule.js" async><\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"b-浏览器加载es6模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-浏览器加载es6模块"}},[s._v("#")]),s._v(" b. 浏览器加载ES6模块")]),s._v(" "),a("p",[s._v("需要在script标签上加入"),a("code",[s._v('type="module"')]),s._v("的属性，并且异步加载不会阻塞浏览器，等到页面渲染完，再执行模块脚本。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="module" src="./foo.js"><\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"c-es6模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-es6模块"}},[s._v("#")]),s._v(" c. ES6模块")]),s._v(" "),a("p",[s._v("ES6模块的设计思想是尽量的静态化提供编译检查，这样可以对程序进一步的优化提升。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// demo1.js")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" fitstname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wang'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    firstname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    f1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* demo2.js，\n1 firstname如果是一个对象，当对象属性值，改变了是会影响其他模块加载的这个对象属性值。\n不建议更改导入模块的值。直接给导入的变量赋值会报错。\n2 import具有提升声明的效果\n3 当多次import同一个模块，只会执行一次，相当于singleton模式\n*/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("firstname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./demo1.js'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" cc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./demo1.js'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" 变量或方法\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n import(模块位置)，返回一个Promise对象\n import()类似于Node.js的require方法，区别主要是前者是异步加载，后者是同步加载。\n */")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("h3",{attrs:{id:"d-项目级es6模块的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d-项目级es6模块的定义"}},[s._v("#")]),s._v(" d. 项目级ES6模块的定义")]),s._v(" "),a("ul",[a("li",[s._v("package.json的main字段")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"main"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/index.js"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上面代码指定项目的入口脚本为./src/index.js，它的格式为 ES6 模块。如果没有type字段，index.js就会被解释为 CommonJS 模块。")]),s._v(" "),a("ul",[a("li",[s._v("package.json的exports字段")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exports"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"./submodule"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/submodule.js"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("上面的代码指定src/submodule.js别名为submodule，然后就可以从别名加载这个文件。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" submodule "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'es-module-package/submodule'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"e-commonjs模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-commonjs模块"}},[s._v("#")]),s._v(" e. CommonJS模块")]),s._v(" "),a("p",[s._v("require加载规则：")]),s._v(" "),a("ul",[a("li",[s._v("如果参数字符串以“/”开头，则表示加载的是一个位于绝对路径的模块文件。")]),s._v(" "),a("li",[s._v("如果参数字符串以“./”开头，则表示加载的是一个位于相对路径。")]),s._v(" "),a("li",[s._v("如果参数字符串不以“./“或”/“开头，则表示加载的是一个默认提供的核心模块（位于Node的系统安装目录中），或者一个位于各级node_modules目录的已安装模块（全局安装或局部安装）。")]),s._v(" "),a("li",[s._v("如果参数字符串不以“./“或”/“开头，而且是一个路径，比如require('example-module/path/to/file')，则将先找到example-module的位置，然后再以它为参数，找到后续路径。")]),s._v(" "),a("li",[s._v("如果指定的模块文件没有发现，Node会尝试为文件名添加.js、.json、.node后，再去搜索。.js件会以文本格式的JavaScript脚本文件解析，.json文件会以JSON格式的文本文件解析，.node文件会以编译后的二进制文件解析。")]),s._v(" "),a("li",[s._v("如果想得到require命令加载的确切文件名，使用require.resolve()方法。")])]),s._v(" "),a("p",[s._v("模块缓存规则：")]),s._v(" "),a("ul",[a("li",[s._v("第一次加载某个模块时，Node会缓存该模块。以后再加载该模块，就直接从缓存取出该模块的module.exports属性。")])]),s._v(" "),a("h3",{attrs:{id:"f-es6与commonjs模块的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f-es6与commonjs模块的差异"}},[s._v("#")]),s._v(" f. ES6与CommonJS模块的差异")]),s._v(" "),a("ul",[a("li",[s._v("CommonJS 模块输出的是一个值的拷贝，并且更改对象属性值不会影响另外一个模块的导入；ES6模块输出的是值的引用。")]),s._v(" "),a("li",[s._v("CommonJS 模块是运行时加载，ES6模块是编译时输出接口。")]),s._v(" "),a("li",[s._v("CommonJS 模块的require()是同步加载模块，ES6模块的import命令是异步加载，有一个独立的模块依赖的解析阶段。")])]),s._v(" "),a("p",[s._v("共同点：\n模块不会重复执行。")]),s._v(" "),a("h2",{attrs:{id:"_5-编程思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-编程思想"}},[s._v("#")]),s._v(" 5 编程思想")]),s._v(" "),a("p",[s._v("编程出发点是为了解决问题，编程思想就是为了解决问题而领悟到的一些本质上东西，为我所用。")])])}),[],!1,null,null,null);a.default=n.exports}}]);